//onScroll={Animated.event(
//                      [
   //                     {
     //                   nativeEvent: {
     //                   contentOffset: {
      //                    x: mapAnimation,
       //                 }
       //               },
       //             },
        //          ],
       //           {useNativeDriver: true}
       //         )}

       /*loginUser = async (email,password) => {
    try{
        await firebase.auth().signInWithEmailAndPassword(email, password)
    } catch (error){
      alert(error.message)
    }
  }*/

  /*
  const [intializing, setInitializing] = useState(false);
  const [user, setUser] = useState();
  // handle user state changes
  function onAuthStateChanged(user){
    setUser(user);
    if (initializing) setInitializing(false);
  }

  useEffect(() => {
    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged)
    return subscriber;
  }, []);

  if (intializing) return null;

  if (!user){
    return(
      <NavigationContainer>
      <Stack.Navigator>
      <Stack.Screen options={{ headerShown: false }} name="Inside" component={InsideLayout} />
       <Stack.Screen options={{ headerShown: false }} name="SignUp" component={SignUp} />
    </Stack.Navigator></NavigationContainer>
    );
  }*/